// npx prisma init
// npx prisma migrate dev --name init
// npx prisma migrate dev --name init --preview-feature
// npx prisma migrate dev --name refreshtoken --preview-feature

// Generator used to generate Prisma Client(there are other generators too)
generator client {
  provider = "prisma-client-js"
}

// Set the url of the database to the value of the environment variable DATABASE_URL
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

// Define your data model
model User {
  id           String         @id @default(uuid())
  firstName    String
  lastName     String
  email        String         @unique
  password     String
  integrations Integration[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  role         Role           @default(USER)
  RefreshToken RefreshToken[]
  Insight      Insight[]

  @@index([email])
}

model RefreshToken {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  jwtid       String
  used        Boolean  @default(false)
  invalidated Boolean  @default(false)
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Integration {
  id          String    @id @default(uuid())
  name        String
  type        String
  credentials Json // not all db doest support json type (postgres does)
  user        User?     @relation(fields: [creatorId], references: [id])
  creatorId   String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Insight     Insight[]
}

model Insight {
  id            String       @id @default(uuid())
  title         String
  description   String?
  integration   Integration? @relation(fields: [integrationId], references: [id])
  integrationId String
  creator       User?        @relation(fields: [creatorId], references: [id])
  creatorId     String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  graphData     Json
  parameters    Json
  refreshRate   Int          @default(0)
  lastRefresh   DateTime?    @default(now())
}
